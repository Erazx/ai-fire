<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Surveying&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.ai-fire.com/"/>
  <updated>2016-12-29T09:32:05.320Z</updated>
  <id>http://blog.ai-fire.com/</id>
  
  <author>
    <name>Surveying Erazx</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Django-编码风格</title>
    <link href="http://blog.ai-fire.com/2016/12/29/Django-%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC/"/>
    <id>http://blog.ai-fire.com/2016/12/29/Django-编码风格/</id>
    <published>2016-12-29T08:51:00.000Z</published>
    <updated>2016-12-29T09:32:05.320Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Django编码风格"><a href="#Django编码风格" class="headerlink" title="Django编码风格"></a>Django编码风格</h1><p>本篇简述：目前广泛使用的python编码风格是Guido van Rossum制定的<a href="http://legacy.python.
org/dev/peps/pep-0008/" target="_blank" rel="external">PEP8</a>。也许很多内容都已经有了解过，这里列出来方便以后可以备查。<br><a id="more"></a></p>
<h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><ul>
<li>python中缩进用来限定代码块，一般用4个空格做缩进</li>
</ul>
<h2 id="空行"><a href="#空行" class="headerlink" title="空行"></a>空行</h2><ul>
<li>空两行：用来分隔顶层函数或类定义，增强代码可读性</li>
<li>空一行：用来分隔类内部的方法，或来用分隔一个逻辑段的代码</li>
</ul>
<h2 id="包的引入"><a href="#包的引入" class="headerlink" title="包的引入"></a>包的引入</h2><ul>
<li><code>import</code> 语句应该放在文件开头</li>
<li>不建议一行引入多个模块，每一个import都应该单独一行</li>
<li>当<code>import</code>语句过长时，可以用<code>()</code> 将引入的方法括起来，可跨行<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">import os</div><div class="line">import sys</div><div class="line"></div><div class="line">from django.http import Http404, HttpResponse</div><div class="line"></div><div class="line">from django.http import (</div><div class="line">Http404, HttpResponse, HttpResponsePermanentRedirect</div><div class="line">)</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="包引入分类"><a href="#包引入分类" class="headerlink" title="包引入分类"></a>包引入分类</h2><ul>
<li>引入标准库：<code>import simplejson</code></li>
<li>第三方库：（网站下载或pip安装）<code>from decimal import *</code></li>
<li>本地应用/模块的引入：<code>from models import ModleFoo</code></li>
</ul>
<h2 id="命名约定"><a href="#命名约定" class="headerlink" title="命名约定"></a>命名约定</h2><ul>
<li>变量命名：绝不用单字符如<code>x</code>做变量名，用有含义的字符串命名变量，增强可阅读性</li>
<li>包或模块命名：以小写字母缩写命名模块，因为模块名一般就是文件名，所以应尽可能简短</li>
<li>类命名：遵循<code>CamelCase</code>命名规则，每个单词首字母大写</li>
<li>全局变量命名：应尽可能避免使用全局变量，通常以一个下划线开头从而避免被import</li>
<li>函数命名及方法参数的命名：以下划线隔开的小写字母组成的字符串命名</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Django编码风格&quot;&gt;&lt;a href=&quot;#Django编码风格&quot; class=&quot;headerlink&quot; title=&quot;Django编码风格&quot;&gt;&lt;/a&gt;Django编码风格&lt;/h1&gt;&lt;p&gt;本篇简述：目前广泛使用的python编码风格是Guido van Rossum制定的&lt;a href=&quot;http://legacy.python.
org/dev/peps/pep-0008/&quot;&gt;PEP8&lt;/a&gt;。也许很多内容都已经有了解过，这里列出来方便以后可以备查。&lt;br&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.ai-fire.com/categories/Django/"/>
    
    
      <category term="PEP8 编码风格" scheme="http://blog.ai-fire.com/tags/PEP8-%E7%BC%96%E7%A0%81%E9%A3%8E%E6%A0%BC/"/>
    
  </entry>
  
  <entry>
    <title>Django-创建第一个项目</title>
    <link href="http://blog.ai-fire.com/2016/12/29/Django-%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/"/>
    <id>http://blog.ai-fire.com/2016/12/29/Django-创建第一个项目/</id>
    <published>2016-12-29T07:26:00.000Z</published>
    <updated>2016-12-29T08:47:44.973Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建第一个Django项目"><a href="#创建第一个Django项目" class="headerlink" title="创建第一个Django项目"></a>创建第一个Django项目</h1><p>本篇简单操作了一遍如何创建一个Django项目、配置mysql数据库连接、运行开发服务器测试。<br><a id="more"></a></p>
<h2 id="创建一个空的项目"><a href="#创建一个空的项目" class="headerlink" title="创建一个空的项目"></a>创建一个空的项目</h2><p>在终端中运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">(django1.10) shell&gt; django-admin startproject django_bookmarks</div><div class="line">(django1.10) shell&gt; tree django_bookmarks/</div><div class="line">django_bookmarks/</div><div class="line">├── django_bookmarks</div><div class="line">│   ├── __init__.py</div><div class="line">│   ├── settings.py</div><div class="line">│   ├── urls.py</div><div class="line">│   └── wsgi.py</div><div class="line">└── manage.py</div><div class="line"></div><div class="line">1 directory, 5 files</div></pre></td></tr></table></figure></p>
<ul>
<li><code>__init__.py</code> : 声明python包</li>
<li><code>manage.py</code> : 管理项目的脚本，事实上<code>django-admin</code>与<code>manage.py</code>后台的代码是一致的</li>
<li><code>settings.py</code> : 项目的主配置文件，</li>
<li><code>url.py</code> : url路由映射配置文件</li>
</ul>
<h2 id="配置数据库连接"><a href="#配置数据库连接" class="headerlink" title="配置数据库连接"></a>配置数据库连接</h2><ul>
<li>默认使用sqlite，其他数据库先要先安装好相应数据库的python模块，如mysql，python2可以用MySQLdb，python3只能用mysqlclient了</li>
<li><p>创建好数据库，授权</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mysql&gt; CREATE DATABASE `dj_bookmarks` DEFAULT CHARACTER SET utf8;</div><div class="line">Query OK, 1 row affected (0.09 sec)</div><div class="line"></div><div class="line">mysql&gt; GRANT ALL ON `dj_bookmarks`.* TO &apos;djmark&apos;@&apos;%&apos; identified by &apos;xfxfxfxf&apos;;</div><div class="line">Query OK, 0 rows affected (0.10 sec)</div><div class="line"></div><div class="line">mysql&gt; flush privileges;</div><div class="line">Query OK, 0 rows affected (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>打开<code>setting.py</code>配置文件，找到数据库配置章节，配置好数据库、用户名、密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">DATABASES = &#123;</div><div class="line">    &apos;default&apos;: &#123;</div><div class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</div><div class="line">        &apos;NAME&apos;: &apos;dj_bookmarks&apos;,</div><div class="line">        &apos;HOST&apos;: &apos;127.0.0.1&apos;,</div><div class="line">        &apos;USER&apos;: &apos;djmark&apos;,</div><div class="line">        &apos;PASSWORD&apos;: &apos;bgycj2008@&apos;,</div><div class="line">        &apos;PORT&apos;: 3306,</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>初始化数据库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">django_bookmarks (django1.10) shell&gt; python manage.py migrate </div><div class="line">System check identified some issues:</div><div class="line"></div><div class="line">WARNINGS:</div><div class="line">?: (mysql.W002) MySQL Strict Mode is not set for database connection &apos;default&apos;</div><div class="line">	HINT: MySQL&apos;s Strict Mode fixes many data integrity problems in MySQL, such as data truncation upon insertion, by escalating warnings into errors. It is strongly recommended you activate it. See: https://docs.djangoproject.com/en/1.10/ref/databases/#mysql-sql-mode</div><div class="line">Operations to perform:</div><div class="line">  Apply all migrations: admin, auth, contenttypes, sessions</div><div class="line">Running migrations:</div><div class="line">  Applying contenttypes.0001_initial... OK</div><div class="line">  Applying auth.0001_initial... OK</div><div class="line">  Applying admin.0001_initial... OK</div><div class="line">  Applying admin.0002_logentry_remove_auto_add... OK</div><div class="line">  Applying contenttypes.0002_remove_content_type_name... OK</div><div class="line">  Applying auth.0002_alter_permission_name_max_length... OK</div><div class="line">  Applying auth.0003_alter_user_email_max_length... OK</div><div class="line">  Applying auth.0004_alter_user_username_opts... OK</div><div class="line">  Applying auth.0005_alter_user_last_login_null... OK</div><div class="line">  Applying auth.0006_require_contenttypes_0002... OK</div><div class="line">  Applying auth.0007_alter_validators_add_error_messages... OK</div><div class="line">  Applying auth.0008_alter_user_username_max_length... OK</div><div class="line">  Applying sessions.0001_initial... OK</div><div class="line">django_bookmarks (django1.10) shell&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="启动开发服务器"><a href="#启动开发服务器" class="headerlink" title="启动开发服务器"></a>启动开发服务器</h2>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">django_bookmarks (django1.10) shell&gt; python manage.py runserver</div><div class="line">Performing system checks...</div><div class="line"></div><div class="line">System check identified no issues (0 silenced).</div><div class="line">December 29, 2016 - 08:27:36</div><div class="line">Django version 1.10.4, using settings &apos;django_bookmarks.settings&apos;</div><div class="line">Starting development server at http://127.0.0.1:8000/</div><div class="line">Quit the server with CONTROL-C.</div></pre></td></tr></table></figure>
<ul>
<li><code>python manage.py runserver &lt;ip&gt;:&lt;port&gt;</code>指定监听的ip，端口</li>
<li><p>配置文件配置 <code>ALLOWED_HOST = [&#39;&lt;访问域名/ip&gt;&#39;,]</code>,否则会提示Invalid HTTP_HOST header: ‘x.x.x.x:8000’. You may need to add ‘x.x.x.x’ to ALLOWED_HOSTS.</p>
<p><img src="http://7xpkk2.com1.z0.glb.clouddn.com/first-project.jpg" alt="First-Project"></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;创建第一个Django项目&quot;&gt;&lt;a href=&quot;#创建第一个Django项目&quot; class=&quot;headerlink&quot; title=&quot;创建第一个Django项目&quot;&gt;&lt;/a&gt;创建第一个Django项目&lt;/h1&gt;&lt;p&gt;本篇简单操作了一遍如何创建一个Django项目、配置mysql数据库连接、运行开发服务器测试。&lt;br&gt;
    
    </summary>
    
      <category term="Django" scheme="http://blog.ai-fire.com/categories/Django/"/>
    
    
  </entry>
  
  <entry>
    <title>Zabbix-监控php-fpm状态</title>
    <link href="http://blog.ai-fire.com/2016/12/28/Zabbix-%E7%9B%91%E6%8E%A7php-fpm%E7%8A%B6%E6%80%81/"/>
    <id>http://blog.ai-fire.com/2016/12/28/Zabbix-监控php-fpm状态/</id>
    <published>2016-12-28T06:20:00.000Z</published>
    <updated>2016-12-28T07:32:42.752Z</updated>
    
    <content type="html"><![CDATA[<p>本文简述了利用zabbix监控php-fpm运行状态的配置过程，测试客户端是Centos7系统的，php-fpm、nginx都是yum安装的<br><a id="more"></a></p>
<h2 id="php-fpm-开启-FPM-status-状态页"><a href="#php-fpm-开启-FPM-status-状态页" class="headerlink" title="php-fpm 开启 FPM status 状态页"></a>php-fpm 开启 FPM status 状态页</h2><blockquote>
<p>vim /etc/php-fpm.d/www.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 取消此行注释</div><div class="line">pm.status_path = /status</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a>Nginx配置</h2><blockquote>
<p>vim /etc/nginx/conf.d/default.host.conf          </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line">    listen       80 default_server;</div><div class="line">    server_name  _;</div><div class="line"></div><div class="line">    charset      utf-8;</div><div class="line"></div><div class="line">    # php-fpm status</div><div class="line">    location ~ ^/(status|ping)$</div><div class="line">    &#123;</div><div class="line">        include fastcgi_params;</div><div class="line">        fastcgi_pass 127.0.0.1:9000;</div><div class="line">        fastcgi_param SCRIPT_FILENAME $fastcgi_script_name;</div><div class="line">        allow 127.0.0.1;</div><div class="line">        allow xxx.xxx.xxx.xxx;</div><div class="line">        deny all;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    location / &#123;</div><div class="line">        proxy_redirect off;</div><div class="line">        return 403;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="重启php-fpm、nginx服务"><a href="#重启php-fpm、nginx服务" class="headerlink" title="重启php-fpm、nginx服务"></a>重启php-fpm、nginx服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">systemctl restart php-fpm</div><div class="line">nginx -t</div><div class="line">nginx -s reload</div><div class="line"># systemctl restart nginx</div></pre></td></tr></table></figure>
<h2 id="测试打开status页面"><a href="#测试打开status页面" class="headerlink" title="测试打开status页面"></a>测试打开status页面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">shell&gt; curl -s &quot;http://127.0.0.1/status&quot;</div><div class="line">pool:                 www</div><div class="line">process manager:      dynamic</div><div class="line">start time:           28/Dec/2016:14:50:53 +0800</div><div class="line">start since:          282</div><div class="line">accepted conn:        7</div><div class="line">listen queue:         0</div><div class="line">max listen queue:     0</div><div class="line">listen queue len:     128</div><div class="line">idle processes:       5</div><div class="line">active processes:     1</div><div class="line">total processes:      6</div><div class="line">max active processes: 2</div><div class="line">max children reached: 0</div><div class="line">slow requests:        0</div></pre></td></tr></table></figure>
<h3 id="php-fpm-状态详解"><a href="#php-fpm-状态详解" class="headerlink" title="php-fpm 状态详解"></a>php-fpm 状态详解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">pool – fpm池子名称，大多数为www</div><div class="line">process manager – 进程管理方式,值：static, dynamic or ondemand. dynamic</div><div class="line">start time – 启动日期,如果reload了php-fpm，时间会更新</div><div class="line">start since – 运行时长</div><div class="line">accepted conn – 当前池子接受的请求数</div><div class="line">listen queue – 请求等待队列，如果这个值不为0，那么要增加FPM的进程数量</div><div class="line">max listen queue – 请求等待队列最高的数量</div><div class="line">listen queue len – socket等待队列长度</div><div class="line">idle processes – 空闲进程数量</div><div class="line">active processes – 活跃进程数量</div><div class="line">total processes – 总进程数量</div><div class="line">max active processes – 最大的活跃进程数量（FPM启动开始算）</div><div class="line">max children reached - 大道进程最大数量限制的次数，如果这个数量不为0，那说明你的最大进程数量太小了，请改大一点。</div><div class="line">slow requests – 启用了php-fpm slow-log，缓慢请求的数量</div></pre></td></tr></table></figure>
<h3 id="php-fpm-状态页可带参数"><a href="#php-fpm-状态页可带参数" class="headerlink" title="php-fpm 状态页可带参数"></a>php-fpm 状态页可带参数</h3><ul>
<li><code>/status?json</code> : 以json格式返回结果</li>
<li><code>/status?xml</code> : 以xml格式返回结果</li>
<li><code>/status?html</code> : 以html格式返回结果</li>
<li><code>/status?full</code> : 返回完整的php-fpm状态报告</li>
</ul>
<h3 id="full-状态页详解"><a href="#full-状态页详解" class="headerlink" title="full 状态页详解"></a>full 状态页详解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">pid – 进程PID，可以单独kill这个进程. You can use this PID to kill a long running process.</div><div class="line">state – 当前进程的状态 (Idle, Running, …)</div><div class="line">start time – 进程启动的日期</div><div class="line">start since – 当前进程运行时长</div><div class="line">requests – 当前进程处理了多少个请求</div><div class="line">request duration – 请求时长（微妙）</div><div class="line">request method – 请求方法 (GET, POST, …)</div><div class="line">request URI – 请求URI</div><div class="line">content length – 请求内容长度 (仅用于 POST)</div><div class="line">user – 用户 (PHP_AUTH_USER) (or ‘-’ 如果没设置)</div><div class="line">script – PHP脚本 (or ‘-’ if not set)</div><div class="line">last request cpu – 最后一个请求CPU使用率。</div><div class="line">last request memorythe - 上一个请求使用的内存</div></pre></td></tr></table></figure>
<h2 id="zabbix-client-配置"><a href="#zabbix-client-配置" class="headerlink" title="zabbix client 配置"></a>zabbix client 配置</h2><h3 id="自定义key"><a href="#自定义key" class="headerlink" title="自定义key"></a>自定义key</h3><blockquote>
<p>vim /usr/local/zabbix/etc/zabbix_agentd.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 新增此行，引入自定义key配置文件</div><div class="line">Include=/usr/local/zabbix/etc/zabbix_agentd.conf.d/userparams.conf</div></pre></td></tr></table></figure></p>
<p>vim /usr/local/zabbix/etc/zabbix_agentd.conf.d/userparams.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">UserParameter=php-fpm.status[*],/usr/bin/curl -s &quot;http://127.0.0.1/status?xml&quot; | grep &quot;&lt;$1&gt;&quot; | awk -F&apos;&gt;|&lt;&apos; &apos;&#123; print $$3&#125;&apos;</div></pre></td></tr></table></figure></p>
</blockquote>
<h3 id="重启客户端"><a href="#重启客户端" class="headerlink" title="重启客户端"></a>重启客户端</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">shell&gt; killall zabbix_agentd</div><div class="line">shell&gt; /usr/local/zabbix/sbin/zabbix_agentd</div></pre></td></tr></table></figure>
<h2 id="zabbix-server导入php-fpm监控模板"><a href="#zabbix-server导入php-fpm监控模板" class="headerlink" title="zabbix server导入php-fpm监控模板"></a>zabbix server导入php-fpm监控模板</h2><p><a href="https://raw.githubusercontent.com/Erazx/zabbix-templates/master/templates/zbx_templates_php-fpm.xml" target="_blank" rel="external">php-fpm模板下载</a></p>
<ul>
<li><p>进入后台-&gt;configuration-&gt;templates-&gt;import（右侧）-&gt;选择模板-&gt;最后点击import。至此php-fpm模板已经导入到zabbix中。</p>
</li>
<li><p>接下来需要把php-fpm模板link到你的主机上，进入后台-&gt;configuration-&gt;点击你的主机-&gt;templates-&gt;输入php-fpm模板名称，点击add，最后点击update即可</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文简述了利用zabbix监控php-fpm运行状态的配置过程，测试客户端是Centos7系统的，php-fpm、nginx都是yum安装的&lt;br&gt;
    
    </summary>
    
    
      <category term="zabbix php-fpm status" scheme="http://blog.ai-fire.com/tags/zabbix-php-fpm-status/"/>
    
  </entry>
  
  <entry>
    <title>版本库推荐提交日志格式</title>
    <link href="http://blog.ai-fire.com/2016/12/27/%E7%89%88%E6%9C%AC%E5%BA%93%E6%8E%A8%E8%8D%90%E6%8F%90%E4%BA%A4%E6%97%A5%E5%BF%97%E6%A0%BC%E5%BC%8F/"/>
    <id>http://blog.ai-fire.com/2016/12/27/版本库推荐提交日志格式/</id>
    <published>2016-12-27T09:03:00.000Z</published>
    <updated>2016-12-27T09:55:47.451Z</updated>
    
    <content type="html"><![CDATA[<p>版本控制系统中<code>commit message</code>是很小的一件事情，往往引不起大家的关注，不妨打开公司的 gitlab 上的任一个 repo，查看 commit log，满篇的 update 和 fix，完全不知道这些 commit 是要做啥。下面是最近看到一个还不错的实践。<br><a id="more"></a></p>
<blockquote>
<p>参考文档：</p>
</blockquote>
<p><a href="http://blog.jobbole.com/109197/" target="_blank" rel="external">Git最佳实践：commit msg</a> </p>
<p><a href="https://github.com/thoughtbot/dotfiles/blob/master/gitmessage" target="_blank" rel="external">thoughtbot规范</a></p>
<h3 id="commit-message-推荐格式"><a href="#commit-message-推荐格式" class="headerlink" title="commit message 推荐格式"></a>commit message 推荐格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># 首行写修改的主题，不超过50字符</div><div class="line">#</div><div class="line"># 从此行起写详细的描述，每行不超过72字符，</div><div class="line"># 自行换行，要写清一下几个问题：</div><div class="line">#</div><div class="line"># * 为什么这个修改是必须的?</div><div class="line"># * 都解决了哪些问题?</div><div class="line"># * 会对其他代码有什么影响?</div><div class="line">#</div><div class="line"># 最后一行写上相应ticket链接</div></pre></td></tr></table></figure>
<p>下面是一个例子：<br><img src="http://7xpkk2.com1.z0.glb.clouddn.com/commit-msg.jpg" alt="comit-msg"></p>
<ul>
<li><strong>one thing one commit</strong>：在提交 commit 的时候尽量保证这个 commit 只做一件事情，比如实现某个功能或者修改了配置文件。这样如果出现发布排期问题，比如只能发布功能A，那么可以过滤出功能A的commit，合并到发布分支中。</li>
<li><strong>第二行空一行</strong>：这是方便<code>git log --oneline</code>查看日志时，就只显示首行</li>
<li><strong>末行ticket链接</strong>：通常在开发之前会将所有的功能进行拆解，然后开发过程中需要通过一些工具来跟踪，每个小功能就是一个 ticket。有些公司使用 jira，有些公司使用 wiki。以使用 jira 为例，前面把功能拆解之后分到每个人手上。这样我们进行提交的时候附上对于的 ticket 链接或者 ticket 号，之后再回溯的时候就会非常方便了。或者使用 jira 集成版本控制的插件如Fisheye(crucible)，通过抓取<code>commit msg</code>进行分析就能将相应的改动代码关联到 jira 。这么做的好处不言而喻，需求-功能-开发-代码，整个都被串起来了，不管是对于新人了解系统还是5年或者10年之后回溯都是非常有帮助的。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;版本控制系统中&lt;code&gt;commit message&lt;/code&gt;是很小的一件事情，往往引不起大家的关注，不妨打开公司的 gitlab 上的任一个 repo，查看 commit log，满篇的 update 和 fix，完全不知道这些 commit 是要做啥。下面是最近看到一个还不错的实践。&lt;br&gt;
    
    </summary>
    
      <category term="版本控制" scheme="http://blog.ai-fire.com/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
      <category term="message 提交日志" scheme="http://blog.ai-fire.com/tags/message-%E6%8F%90%E4%BA%A4%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>SVN分库</title>
    <link href="http://blog.ai-fire.com/2016/12/20/SVN%E5%88%86%E5%BA%93/"/>
    <id>http://blog.ai-fire.com/2016/12/20/SVN分库/</id>
    <published>2016-12-20T07:16:53.000Z</published>
    <updated>2016-12-20T07:17:23.430Z</updated>
    
    <content type="html"><![CDATA[<p>前情：之前的svn版本库是单库，所有项目都只是分目录存放，准备分库。如下：<a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">/home/svn/</div><div class="line">|-- Project_1</div><div class="line">|-- Project_2</div><div class="line">`-- Project_3</div><div class="line">    |-- branches</div><div class="line">    |-- tags</div><div class="line">    `-- trunk</div></pre></td></tr></table></figure></p>
<h2 id="导出整个版本库"><a href="#导出整个版本库" class="headerlink" title="导出整个版本库"></a>导出整个版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">shell&gt; sudo svnadmin dump /home/svn &gt; /home/backup/full_svn.dump</div><div class="line">......</div><div class="line">* Dumped revision 2405.</div><div class="line">* Dumped revision 2406.</div></pre></td></tr></table></figure>
<h2 id="使用-svndumpfilter-include-过滤出特定的项目库"><a href="#使用-svndumpfilter-include-过滤出特定的项目库" class="headerlink" title="使用 svndumpfilter include 过滤出特定的项目库"></a>使用 <code>svndumpfilter include</code> 过滤出特定的项目库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">shell&gt; svndumpfilter help include</div><div class="line">include: 从转储串流中删除未包含指定前缀的节点。</div><div class="line">用法: svndumpfilter include PATH_PREFIX...</div><div class="line"></div><div class="line">有效选项: </div><div class="line">  --drop-empty-revs        : 删除因过滤而产生的空版本。</div><div class="line">  --renumber-revs          : 过滤后重编余下的版本。</div><div class="line">  --skip-missing-merge-sources : 跳过缺少的合并源</div><div class="line">  --targets ARG            : 从文件 ARG 中读取额外的前缀，每个一行。</div><div class="line">  --preserve-revprops      : 不过滤版本属性。</div><div class="line">  --quiet                  : 不显示过滤的统计数据。</div><div class="line">  --pattern                : 将路径前缀视为文件统配模式。</div><div class="line">  </div><div class="line">shell&gt; svndumpfilter include Project_1 --drop-empty-revs --renumber-revs &lt; full_svn.dump &gt; project_1.dump</div></pre></td></tr></table></figure>
<h2 id="移动项目目录到顶层目录"><a href="#移动项目目录到顶层目录" class="headerlink" title="移动项目目录到顶层目录"></a>移动项目目录到顶层目录</h2><blockquote>
<p>此时得到的 <code>project_1.dump</code> 已经可以用来创建新的版本库了，但是这样创建的版本库依然保持着 Project_1/trunk 这样的目录结构，要把项目目录移动到顶层目录，如果使用<code>svn mv</code>命令移动目录，那么原来路径的修改日志就全没了；可以通过修改dump文件中的<code>Node-path</code> 和 <code>Node-copyfrom-path</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">shell&gt; sed -i &apos;s/Node-path: project_n\/trunk/Node-path: trunk/g&apos; project_1.dump</div><div class="line">shell&gt; sed -i &apos;s/Node-copyfrom-path: project_n\/trunk/Node-copyfrom-path: trunk/g&apos; project_1.dump</div></pre></td></tr></table></figure></p>
</blockquote>
<h2 id="创建新库"><a href="#创建新库" class="headerlink" title="创建新库"></a>创建新库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shell&gt; svnadmin create project_1</div></pre></td></tr></table></figure>
<h2 id="导入版本库"><a href="#导入版本库" class="headerlink" title="导入版本库"></a>导入版本库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shell&gt; svnadmin load project_1 &lt; project_1.dump</div></pre></td></tr></table></figure>
<h2 id="重定向检出路径"><a href="#重定向检出路径" class="headerlink" title="重定向检出路径"></a>重定向检出路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">svn switch --relocate http://svn.example.com/projects http://svn.example.com/project_n</div></pre></td></tr></table></figure>
<h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># 过滤时遇到 svndumpfilter: E200003: 复制源路径“/home/public/css/common/animate.css”无效</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前情：之前的svn版本库是单库，所有项目都只是分目录存放，准备分库。如下：
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.ai-fire.com/2016/12/09/hello-world/"/>
    <id>http://blog.ai-fire.com/2016/12/09/hello-world/</id>
    <published>2016-12-09T06:50:27.000Z</published>
    <updated>2016-12-09T06:50:43.303Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>redis基础-数据结构</title>
    <link href="http://blog.ai-fire.com/2016/12/08/redis%E5%9F%BA%E7%A1%80-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://blog.ai-fire.com/2016/12/08/redis基础-数据结构/</id>
    <published>2016-12-08T07:56:00.000Z</published>
    <updated>2016-12-09T07:09:47.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="redis-数据类型"><a href="#redis-数据类型" class="headerlink" title="redis 数据类型"></a>redis 数据类型</h2><a id="more"></a>
<h3 id="Strings"><a href="#Strings" class="headerlink" title="Strings"></a>Strings</h3><ul>
<li>数据是二进制安全的，可以存储JPEG格式图片或一个序列化的ruby对象</li>
<li><p>字符串类型最大可以存储512M字节的内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">root@b6832986afab:~# redis-cli </div><div class="line">127.0.0.1:6379&gt; set mykey somevalue</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get mykey</div><div class="line">&quot;somevalue&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>set , get 命令创建，索引strings，</p>
</li>
<li><p>append 追加字符串</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"># set 默认会覆盖已有的key值</div><div class="line"># 使用附加选项nx，则set只在key不存在时才成功</div><div class="line"># 附加选项xx，则会覆盖</div><div class="line">127.0.0.1:6379&gt; set mykey ddddd</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get mykey</div><div class="line">&quot;ddddd&quot;</div><div class="line">127.0.0.1:6379&gt; set mykey eeeee nx</div><div class="line">(nil)</div><div class="line">127.0.0.1:6379&gt; get mykey</div><div class="line">&quot;ddddd&quot;</div><div class="line">127.0.0.1:6379&gt; set mykey eeeee xx</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get mykey</div><div class="line">&quot;eeeee&quot;</div><div class="line">127.0.0.1:6379&gt; set mykey myvalue</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; get mykey</div><div class="line">&quot;myvalue&quot;</div><div class="line">127.0.0.1:6379&gt; APPEND mykey 222</div><div class="line">(integer) 10</div><div class="line">127.0.0.1:6379&gt; </div><div class="line">127.0.0.1:6379&gt; get mykey</div><div class="line">&quot;myvalue222&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>string类型可以执行一些有趣的操作，如加法器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; set counter 50</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; incr counter</div><div class="line">(integer) 51</div><div class="line">127.0.0.1:6379&gt; incr counter</div><div class="line">(integer) 52</div><div class="line">127.0.0.1:6379&gt; incrby counter 50</div><div class="line">(integer) 102</div><div class="line">127.0.0.1:6379&gt;</div><div class="line"># incr 将value转为整数并加1</div><div class="line"># incrby 则是加法运算</div><div class="line"># 类似的还有decr，decrby</div></pre></td></tr></table></figure>
</li>
<li><p>mset，mget 可以一次性完成多对key-value关系，mget 会返回一个value数组</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; mset a 10 b 20 c 30 d 50</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; mget a b c d</div><div class="line">1) &quot;10&quot;</div><div class="line">2) &quot;20&quot;</div><div class="line">3) &quot;30&quot;</div><div class="line">4) &quot;50&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Lists"><a href="#Lists" class="headerlink" title="Lists"></a>Lists</h3><ul>
<li>redis 列表是简单的字符串列表，按照插入顺序排序</li>
<li>LPUSH 插入新元素到列表头部（左边）</li>
<li>RPUSH 插入新元素到列表尾部(右边)</li>
<li>上面两个操作直接操作不存在的key时，会创建新的列表，反之，当清空列表时，对应的key从key空间删除</li>
<li>push 操作会返回列表元素长度</li>
<li><p>lrange 通过索引值检索列表元素</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; rpush mylist first</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; rpush mylist second</div><div class="line">(integer) 2</div><div class="line">127.0.0.1:6379&gt; lpush mylist slash</div><div class="line">(integer) 3</div><div class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</div><div class="line">1) &quot;slash&quot;</div><div class="line">2) &quot;first&quot;</div><div class="line">3) &quot;second&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>rpop 取出列表尾部（右边）元素</p>
</li>
<li>lpop 取出列表头部（左边）元素<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; lpop mylist</div><div class="line">&quot;slash&quot;</div><div class="line">127.0.0.1:6379&gt; rpop mylist</div><div class="line">&quot;second&quot;</div><div class="line">127.0.0.1:6379&gt; lrange mylist 0 -1</div><div class="line">1) &quot;first&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Hashes"><a href="#Hashes" class="headerlink" title="Hashes"></a>Hashes</h3><ul>
<li>redis hashed 是字符串字段与字符串值之间的映射，是对象数据类型的完美展示</li>
<li>hmset 可以设置一个多域hash表</li>
<li>hset 设置单个域</li>
<li>hget 获取指定单域</li>
<li>hmget 获取指定多域</li>
<li><p>hgetall 返回指定key的所有信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; hmset group:1001 groupname ssh grouptype local groupmember 20</div><div class="line">OK</div><div class="line">127.0.0.1:6379&gt; hget group groupname</div><div class="line">(nil)</div><div class="line">127.0.0.1:6379&gt; hget group:1001 groupname</div><div class="line">&quot;ssh&quot;</div><div class="line">127.0.0.1:6379&gt; hgetall group:1001 </div><div class="line">1) &quot;groupname&quot;</div><div class="line">2) &quot;ssh&quot;</div><div class="line">3) &quot;grouptype&quot;</div><div class="line">4) &quot;local&quot;</div><div class="line">5) &quot;groupmember&quot;</div><div class="line">6) &quot;20&quot;</div><div class="line">127.0.0.1:6379&gt; hset group:1001 groupname sshd</div><div class="line">(integer) 0</div><div class="line">127.0.0.1:6379&gt; hget group:1001 groupname</div><div class="line">&quot;sshd&quot;</div><div class="line">127.0.0.1:6379&gt; hget group:1001 grouptype</div><div class="line">&quot;local&quot;</div><div class="line">127.0.0.1:6379&gt; hmget group:1001 groupname grouptype groupmember</div><div class="line">1) &quot;sshd&quot;</div><div class="line">2) &quot;local&quot;</div><div class="line">3) &quot;20&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>还可以单独对hash表的表项进行操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; hincrby group:1001 groupmember 20</div><div class="line">(integer) 40</div><div class="line">127.0.0.1:6379&gt;</div><div class="line"># 没有hincr，hdecrby，hdecr。。。</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Sets"><a href="#Sets" class="headerlink" title="Sets"></a>Sets</h3><ul>
<li>redis 集合是无序字符串集合，可以以O(1)的时间复杂度完成添加、删除及测试元素是否存在</li>
<li>不允许包含相同成员，多次添加相同的元素，最终集合中只有一个</li>
<li>sadd 生成一个无序集合，返回元素个数</li>
<li>smembers 查看集合</li>
<li>sismember 元素是否集合 key 的成员，是则返回1，否返回0<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; sadd myset 1 2 5</div><div class="line">(integer) 3</div><div class="line">127.0.0.1:6379&gt; </div><div class="line">127.0.0.1:6379&gt; smembers myset</div><div class="line">1) &quot;1&quot;</div><div class="line">2) &quot;2&quot;</div><div class="line">3) &quot;5&quot;</div><div class="line">127.0.0.1:6379&gt; sismember myset 5</div><div class="line">(integer) 1</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Sorted-Sets"><a href="#Sorted-Sets" class="headerlink" title="Sorted Sets"></a>Sorted Sets</h3><ul>
<li><code>zadd setname sort value</code> 添加元素到有序集合</li>
<li>zrange 查看正序集合</li>
<li>zrevrange 查看反序集合</li>
<li>查看时带上 WITHSCORES 参数返回记录值<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">127.0.0.1:6379&gt; zadd hackers 1940 &quot;Alan Kay&quot;</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; zadd hackers 1950 &quot;Sophie Wilson&quot;</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; zadd hackers 1919 &quot;Richar Steem&quot;</div><div class="line">(integer) 1</div><div class="line">127.0.0.1:6379&gt; zrange hackers 0 -1</div><div class="line">1) &quot;Richar Steem&quot;</div><div class="line">2) &quot;Alan Kay&quot;</div><div class="line">3) &quot;Sophie Wilson&quot;</div><div class="line">127.0.0.1:6379&gt; zrevrange hackers 0 -1</div><div class="line">1) &quot;Sophie Wilson&quot;</div><div class="line">2) &quot;Alan Kay&quot;</div><div class="line">3) &quot;Richar Steem&quot;</div><div class="line">127.0.0.1:6379&gt; zrevrange hackers 0 -1 withscores</div><div class="line">1) &quot;Sophie Wilson&quot;</div><div class="line">2) &quot;1950&quot;</div><div class="line">3) &quot;Alan Kay&quot;</div><div class="line">4) &quot;1940&quot;</div><div class="line">5) &quot;Richar Steem&quot;</div><div class="line">6) &quot;1919&quot;</div><div class="line">127.0.0.1:6379&gt; zrange hackers 0 -1 withscores</div><div class="line">1) &quot;Richar Steem&quot;</div><div class="line">2) &quot;1919&quot;</div><div class="line">3) &quot;Alan Kay&quot;</div><div class="line">4) &quot;1940&quot;</div><div class="line">5) &quot;Sophie Wilson&quot;</div><div class="line">6) &quot;1950&quot;</div><div class="line">127.0.0.1:6379&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><blockquote>
<p><a href="http://redis.io/topics/data-types-intro" target="_blank" rel="external">http://redis.io/topics/data-types-intro</a></p>
<p><a href="http://www.cnblogs.com/guanjinke/archive/2013/01/21/2870576.html" target="_blank" rel="external">http://www.cnblogs.com/guanjinke/archive/2013/01/21/2870576.html</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;redis-数据类型&quot;&gt;&lt;a href=&quot;#redis-数据类型&quot; class=&quot;headerlink&quot; title=&quot;redis 数据类型&quot;&gt;&lt;/a&gt;redis 数据类型&lt;/h2&gt;
    
    </summary>
    
      <category term="redis" scheme="http://blog.ai-fire.com/categories/redis/"/>
    
    
      <category term="redis数据结构" scheme="http://blog.ai-fire.com/tags/redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Openssl 泛域名自签名证书</title>
    <link href="http://blog.ai-fire.com/2016/12/08/Openssl-%E6%B3%9B%E5%9F%9F%E5%90%8D%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
    <id>http://blog.ai-fire.com/2016/12/08/Openssl-泛域名自签名证书/</id>
    <published>2016-12-08T07:08:00.000Z</published>
    <updated>2016-12-09T07:13:39.142Z</updated>
    
    <content type="html"><![CDATA[<p>2048位加密SSL自签名证书的生成，通过DNS别名实现泛域名证书。<br><a id="more"></a></p>
<h3 id="创建临时文件夹"><a href="#创建临时文件夹" class="headerlink" title="创建临时文件夹"></a>创建临时文件夹</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">shell&gt; mkdir keys</div><div class="line">shell&gt; cd keys</div></pre></td></tr></table></figure>
<h3 id="获取配置文件-openssl-cnf"><a href="#获取配置文件-openssl-cnf" class="headerlink" title="获取配置文件 openssl.cnf"></a>获取配置文件 openssl.cnf</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shell&gt; cp /etc/pki/tls/openssl.cnf .</div></pre></td></tr></table></figure>
<h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">shell&gt; vim openssl.cnf</div><div class="line"># 修改 CA 路径</div><div class="line">[ CA_default ]</div><div class="line">dir             = ./CA</div><div class="line"></div><div class="line">[req]</div><div class="line">req_extensions = v3_req # 取消这行的注释</div><div class="line"></div><div class="line"># 确保 req_distinguished_name 中没有 0.xxx 的标签，有的话把0.xxx的0. 去掉</div><div class="line">[req_distinguished_name]</div><div class="line">organizationName                = Organization Name (eg, company)</div><div class="line">organizationName_default        = Default Company Ltd</div><div class="line"></div><div class="line"># 新增 subjectAltName</div><div class="line">[v3_req]</div><div class="line">subjectAltName = @alt_names </div><div class="line"></div><div class="line"># 新增域名别名，可自行增加多个域名</div><div class="line">[alt_names]</div><div class="line">DNS.1 = abc.com</div><div class="line">DNS.2 = *.abc.com</div><div class="line">DNS.3 = xyz.com</div><div class="line">DNS.4 = *.xyz.com</div></pre></td></tr></table></figure>
<h3 id="准备目录"><a href="#准备目录" class="headerlink" title="准备目录"></a>准备目录</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">shell&gt; mkdir -p CA/&#123;certs,crl,newcerts,private&#125;</div><div class="line">shell&gt; touch CA/index.txt</div><div class="line">shell&gt; echo 00 &gt; CA/serial</div></pre></td></tr></table></figure>
<h3 id="生成ca-key并自签署"><a href="#生成ca-key并自签署" class="headerlink" title="生成ca.key并自签署"></a>生成ca.key并自签署</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">shell&gt; openssl req -sha256 -new -x509 -days 3650 -keyout ca.key -out ca.crt -config openssl.cnf</div><div class="line">Generating a 2048 bit RSA private key</div><div class="line">...............................+++</div><div class="line">............................................................................++  +</div><div class="line">writing new private key to &apos;ca.key&apos;</div><div class="line">Enter PEM pass phrase:</div><div class="line">Verifying - Enter PEM pass phrase:</div><div class="line">-----</div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter &apos;.&apos;, the field will be left blank.</div><div class="line">-----</div><div class="line">Country Name (2 letter code) [XX]:CN</div><div class="line">State or Province Name (full name) []:GuangDong</div><div class="line">Locality Name (eg, city) [Default City]:GuangZhou</div><div class="line">Organization Name (eg, company) [Default Company Ltd]:O-Home</div><div class="line">Organizational Unit Name (eg, section) []:Tech</div><div class="line">Common Name (eg, your name or your server&apos;s hostname) []:Surveying     </div><div class="line">Email Address []:xsf9089hot@163.com</div></pre></td></tr></table></figure>
<h3 id="生成server证书"><a href="#生成server证书" class="headerlink" title="生成server证书"></a>生成server证书</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">shell&gt; openssl genrsa -out o-home.com.key 2048</div><div class="line">Generating RSA private key, 2048 bit long modulus</div><div class="line">.............................................................+++</div><div class="line">...+++</div><div class="line">e is 65537 (0x10001)</div></pre></td></tr></table></figure>
<h3 id="生成证书签名请求"><a href="#生成证书签名请求" class="headerlink" title="生成证书签名请求"></a>生成证书签名请求</h3>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">shell&gt; openssl req -new -sha256 -key o-home.com.key -out o-home.com.csr -config openssl.cnf</div><div class="line">You are about to be asked to enter information that will be incorporated</div><div class="line">into your certificate request.</div><div class="line">What you are about to enter is what is called a Distinguished Name or a DN.</div><div class="line">There are quite a few fields but you can leave some blank</div><div class="line">For some fields there will be a default value,</div><div class="line">If you enter &apos;.&apos;, the field will be left blank.</div><div class="line">.-----</div><div class="line">Country Name (2 letter code) [XX]:CN</div><div class="line">State or Province Name (full name) []:GuangDong </div><div class="line">Locality Name (eg, city) [Default City]:GuangZhou</div><div class="line">Organization Name (eg, company) [Default Company Ltd]:O-Home</div><div class="line">Organizational Unit Name (eg, section) []:Tech</div><div class="line">Common Name (eg, your name or your server&apos;s hostname) []:*.o-home.com</div><div class="line">Email Address []:xsf9089hot@163.com</div><div class="line"></div><div class="line">Please enter the following &apos;extra&apos; attributes</div><div class="line">to be sent with your certificate request</div><div class="line">A challenge password []:</div><div class="line">An optional company name []:</div></pre></td></tr></table></figure>
<h3 id="使用自签署的CA，签署server-scr"><a href="#使用自签署的CA，签署server-scr" class="headerlink" title="使用自签署的CA，签署server.scr"></a>使用自签署的CA，签署server.scr</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">shell&gt; openssl ca -in o-home.com.csr -md sha256  -out o-home.com.crt -cert ca.crt -keyfile ca.key -extensions v3_req -config openssl.cnf</div><div class="line">  Using configuration from openssl.cnf</div><div class="line">  Enter pass phrase for ca.key:</div><div class="line">  Check that the request matches the signature</div><div class="line">  Signature ok</div><div class="line">  Certificate Details:</div><div class="line">   .       Serial Number: 0 (0x0)</div><div class="line">   .       Validity</div><div class="line">   .           Not Before: Nov 30 08:46:21 2016 GMT</div><div class="line">   .           Not After : Nov 30 08:46:21 2017 GMT</div><div class="line">   .       Subject:</div><div class="line">   .           countryName               = CN</div><div class="line">   .           stateOrProvinceName       = GuangDong</div><div class="line">   .           organizationName          = O-Home</div><div class="line">   .           organizationalUnitName    = Tech</div><div class="line">   .           commonName                = *.o-home.com</div><div class="line">   .           emailAddress              = xsf9089hot@163.com</div><div class="line">   .       X509v3 extensions:</div><div class="line">   .           X509v3 Basic Constraints: </div><div class="line">   .               CA:FALSE</div><div class="line">   .           X509v3 Key Usage: </div><div class="line">   .               Digital Signature, Non Repudiation, Key Encipherment</div><div class="line">   .           X509v3 Subject Alternative Name: </div><div class="line">   .               DNS:o-home.com, DNS:*.o-home.com</div><div class="line">  Certificate is to be certified until Nov 30 08:46:21 2017 GMT (365 days)</div><div class="line">  Sign the certificate? [y/n]:y</div><div class="line">  .</div><div class="line">  .</div><div class="line">  1 out of 1 certificate requests certified, commit? [y/n]y</div><div class="line">  Write out database with 1 new entries</div><div class="line">  Data Base Updated</div></pre></td></tr></table></figure>
<p>  o-home.com.crt o-home.com.key 就是web服务器中需要的文件了。</p>
<h3 id="NGINX-双向认证"><a href="#NGINX-双向认证" class="headerlink" title="NGINX 双向认证"></a>NGINX 双向认证</h3><p>  如果要做NGINX客户端证书验证的话，重复2、3、4，并执行下面命令生成个人证书</p>
<ul>
<li><p>生成个人证书</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shell&gt; openssl  pkcs12 -export -inkey xxx.key -in xxx.crt -out  xxx.p12</div></pre></td></tr></table></figure>
</li>
<li><p>将个人证书导入pc，同时在nginx ssl基础上增加设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ssl_verify_client on;</div><div class="line">ssl_client_certificate ca.crt;</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2048位加密SSL自签名证书的生成，通过DNS别名实现泛域名证书。&lt;br&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.ai-fire.com/categories/Linux/"/>
    
    
      <category term="openssl证书" scheme="http://blog.ai-fire.com/tags/openssl%E8%AF%81%E4%B9%A6/"/>
    
      <category term="自签名" scheme="http://blog.ai-fire.com/tags/%E8%87%AA%E7%AD%BE%E5%90%8D/"/>
    
  </entry>
  
</feed>
